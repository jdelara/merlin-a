/*
 * generated by Xtext 2.26.0
 */
grammar InternalAdaptersLang;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package adaptersLang.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package adaptersLang.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import adaptersLang.services.AdaptersLangGrammarAccess;

}

@parser::members {

 	private AdaptersLangGrammarAccess grammarAccess;

    public InternalAdaptersLangParser(TokenStream input, AdaptersLangGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "AdapterModel";
   	}

   	@Override
   	protected AdaptersLangGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleAdapterModel
entryRuleAdapterModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdapterModelRule()); }
	iv_ruleAdapterModel=ruleAdapterModel
	{ $current=$iv_ruleAdapterModel.current; }
	EOF;

// Rule AdapterModel
ruleAdapterModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='language'
		{
			newLeafNode(otherlv_0, grammarAccess.getAdapterModelAccess().getLanguageKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAdapterModelAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAdapterModelRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"adaptersLang.AdaptersLang.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='on'
		{
			newLeafNode(otherlv_2, grammarAccess.getAdapterModelAccess().getOnKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAdapterModelAccess().getEcoreEStringParserRuleCall_3_0());
				}
				lv_ecore_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAdapterModelRule());
					}
					set(
						$current,
						"ecore",
						lv_ecore_3_0,
						"adaptersLang.AdaptersLang.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='transformation'
		{
			newLeafNode(otherlv_4, grammarAccess.getAdapterModelAccess().getTransformationKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAdapterModelAccess().getTransformationEStringParserRuleCall_5_0());
				}
				lv_transformation_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAdapterModelRule());
					}
					set(
						$current,
						"transformation",
						lv_transformation_5_0,
						"adaptersLang.AdaptersLang.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='adapters'
		{
			newLeafNode(otherlv_6, grammarAccess.getAdapterModelAccess().getAdaptersKeyword_6());
		}
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getAdapterModelAccess().getLeftCurlyBracketKeyword_7());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAdapterModelAccess().getAdaptersAdapterParserRuleCall_8_0_0());
					}
					lv_adapters_8_0=ruleAdapter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdapterModelRule());
						}
						add(
							$current,
							"adapters",
							lv_adapters_8_0,
							"adaptersLang.AdaptersLang.Adapter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getAdapterModelAccess().getCommaKeyword_8_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAdapterModelAccess().getAdaptersAdapterParserRuleCall_8_1_1_0());
						}
						lv_adapters_10_0=ruleAdapter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAdapterModelRule());
							}
							add(
								$current,
								"adapters",
								lv_adapters_10_0,
								"adaptersLang.AdaptersLang.Adapter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getAdapterModelAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleAdapter
entryRuleAdapter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdapterRule()); }
	iv_ruleAdapter=ruleAdapter
	{ $current=$iv_ruleAdapter.current; }
	EOF;

// Rule Adapter
ruleAdapter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAdapterAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAdapterRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"adaptersLang.AdaptersLang.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAdapterAccess().getEqualsSignKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getAdapterAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAdapterAccess().getCfgDiffConfigDiffParserRuleCall_3_0());
				}
				lv_cfgDiff_3_0=ruleConfigDiff
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAdapterRule());
					}
					set(
						$current,
						"cfgDiff",
						lv_cfgDiff_3_0,
						"adaptersLang.AdaptersLang.ConfigDiff");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getAdapterAccess().getCommaKeyword_4());
		}
		otherlv_5='rules'
		{
			newLeafNode(otherlv_5, grammarAccess.getAdapterAccess().getRulesKeyword_5());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getAdapterAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAdapterAccess().getRulesEStringParserRuleCall_7_0());
				}
				lv_rules_7_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAdapterRule());
					}
					add(
						$current,
						"rules",
						lv_rules_7_0,
						"adaptersLang.AdaptersLang.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getAdapterAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAdapterAccess().getRulesEStringParserRuleCall_8_1_0());
					}
					lv_rules_9_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdapterRule());
						}
						add(
							$current,
							"rules",
							lv_rules_9_0,
							"adaptersLang.AdaptersLang.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getAdapterAccess().getRightCurlyBracketKeyword_9());
		}
		otherlv_11=')'
		{
			newLeafNode(otherlv_11, grammarAccess.getAdapterAccess().getRightParenthesisKeyword_10());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleConfigDiff
entryRuleConfigDiff returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigDiffRule()); }
	iv_ruleConfigDiff=ruleConfigDiff
	{ $current=$iv_ruleConfigDiff.current; }
	EOF;

// Rule ConfigDiff
ruleConfigDiff returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='delta'
		{
			newLeafNode(otherlv_0, grammarAccess.getConfigDiffAccess().getDeltaKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigDiffAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigDiffAccess().getDeltaConfigDeltaParserRuleCall_2_0());
				}
				lv_delta_2_0=ruleConfigDelta
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigDiffRule());
					}
					set(
						$current,
						"delta",
						lv_delta_2_0,
						"adaptersLang.AdaptersLang.ConfigDelta");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getConfigDiffAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getConfigDiffAccess().getCommaKeyword_4());
		}
		otherlv_5='context'
		{
			newLeafNode(otherlv_5, grammarAccess.getConfigDiffAccess().getContextKeyword_5());
		}
		otherlv_6='('
		{
			newLeafNode(otherlv_6, grammarAccess.getConfigDiffAccess().getLeftParenthesisKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigDiffAccess().getContextConfigContextParserRuleCall_7_0());
				}
				lv_context_7_0=ruleConfigContext
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigDiffRule());
					}
					set(
						$current,
						"context",
						lv_context_7_0,
						"adaptersLang.AdaptersLang.ConfigContext");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getConfigDiffAccess().getRightParenthesisKeyword_8());
		}
	)
;

// Entry rule entryRuleConfigDelta
entryRuleConfigDelta returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigDeltaRule()); }
	iv_ruleConfigDelta=ruleConfigDelta
	{ $current=$iv_ruleConfigDelta.current; }
	EOF;

// Rule ConfigDelta
ruleConfigDelta returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConfigDeltaAccess().getConfigDeltaAction_0(),
					$current);
			}
		)
		otherlv_1='+-'
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigDeltaAccess().getPlusSignHyphenMinusKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getConfigDeltaAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigDeltaAccess().getPosSetEStringParserRuleCall_3_0_0());
					}
					lv_posSet_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigDeltaRule());
						}
						add(
							$current,
							"posSet",
							lv_posSet_3_0,
							"adaptersLang.AdaptersLang.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getConfigDeltaAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConfigDeltaAccess().getPosSetEStringParserRuleCall_3_1_1_0());
						}
						lv_posSet_5_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConfigDeltaRule());
							}
							add(
								$current,
								"posSet",
								lv_posSet_5_0,
								"adaptersLang.AdaptersLang.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getConfigDeltaAccess().getRightCurlyBracketKeyword_4());
		}
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getConfigDeltaAccess().getCommaKeyword_5());
		}
		otherlv_8='-+'
		{
			newLeafNode(otherlv_8, grammarAccess.getConfigDeltaAccess().getHyphenMinusPlusSignKeyword_6());
		}
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getConfigDeltaAccess().getLeftCurlyBracketKeyword_7());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigDeltaAccess().getNegSetEStringParserRuleCall_8_0_0());
					}
					lv_negSet_10_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigDeltaRule());
						}
						add(
							$current,
							"negSet",
							lv_negSet_10_0,
							"adaptersLang.AdaptersLang.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getConfigDeltaAccess().getCommaKeyword_8_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConfigDeltaAccess().getNegSetEStringParserRuleCall_8_1_1_0());
						}
						lv_negSet_12_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConfigDeltaRule());
							}
							add(
								$current,
								"negSet",
								lv_negSet_12_0,
								"adaptersLang.AdaptersLang.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getConfigDeltaAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleConfigContext
entryRuleConfigContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigContextRule()); }
	iv_ruleConfigContext=ruleConfigContext
	{ $current=$iv_ruleConfigContext.current; }
	EOF;

// Rule ConfigContext
ruleConfigContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConfigContextAccess().getConfigContextAction_0(),
					$current);
			}
		)
		otherlv_1='++'
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigContextAccess().getPlusSignPlusSignKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getConfigContextAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigContextAccess().getPosSetEStringParserRuleCall_3_0_0());
					}
					lv_posSet_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigContextRule());
						}
						add(
							$current,
							"posSet",
							lv_posSet_3_0,
							"adaptersLang.AdaptersLang.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getConfigContextAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConfigContextAccess().getPosSetEStringParserRuleCall_3_1_1_0());
						}
						lv_posSet_5_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConfigContextRule());
							}
							add(
								$current,
								"posSet",
								lv_posSet_5_0,
								"adaptersLang.AdaptersLang.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getConfigContextAccess().getRightCurlyBracketKeyword_4());
		}
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getConfigContextAccess().getCommaKeyword_5());
		}
		otherlv_8='--'
		{
			newLeafNode(otherlv_8, grammarAccess.getConfigContextAccess().getHyphenMinusHyphenMinusKeyword_6());
		}
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getConfigContextAccess().getLeftCurlyBracketKeyword_7());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigContextAccess().getNegSetEStringParserRuleCall_8_0_0());
					}
					lv_negSet_10_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigContextRule());
						}
						add(
							$current,
							"negSet",
							lv_negSet_10_0,
							"adaptersLang.AdaptersLang.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getConfigContextAccess().getCommaKeyword_8_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConfigContextAccess().getNegSetEStringParserRuleCall_8_1_1_0());
						}
						lv_negSet_12_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConfigContextRule());
							}
							add(
								$current,
								"negSet",
								lv_negSet_12_0,
								"adaptersLang.AdaptersLang.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getConfigContextAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
