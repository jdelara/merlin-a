/**
 * generated by Xtext 2.27.0
 */
package adaptersLang.formatting2;

import adapters.Adapter;
import adapters.AdapterModel;
import adapters.ConfigDiff;
import adaptersLang.services.AdaptersLangGrammarAccess;
import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class AdaptersLangFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private AdaptersLangGrammarAccess _adaptersLangGrammarAccess;

  protected void _format(final AdapterModel adapterModel, @Extension final IFormattableDocument document) {
    EList<Adapter> _adapters = adapterModel.getAdapters();
    for (final Adapter adapter : _adapters) {
      document.<Adapter>format(adapter);
    }
  }

  protected void _format(final Adapter adapter, @Extension final IFormattableDocument document) {
    document.<ConfigDiff>format(adapter.getCfgDiff());
  }

  public void format(final Object adapter, final IFormattableDocument document) {
    if (adapter instanceof XtextResource) {
      _format((XtextResource)adapter, document);
      return;
    } else if (adapter instanceof Adapter) {
      _format((Adapter)adapter, document);
      return;
    } else if (adapter instanceof AdapterModel) {
      _format((AdapterModel)adapter, document);
      return;
    } else if (adapter instanceof EObject) {
      _format((EObject)adapter, document);
      return;
    } else if (adapter == null) {
      _format((Void)null, document);
      return;
    } else if (adapter != null) {
      _format(adapter, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(adapter, document).toString());
    }
  }
}
