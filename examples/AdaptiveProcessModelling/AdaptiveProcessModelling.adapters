language AdaptiveProcessModelling on 
'AdaptiveProcessModelling.ecore'
transformation 'trafos/AdaptiveProcessModelling.henshin'
adapters { 
	CreateMandatoryInitial = ( 	delta(+-{}, -+{ITMandatory}),
								context(++{Object}, --{}),
								rules{createInitialTask}),
	CreateMandatoryFinal = ( 	delta(+-{}, -+{FTMandatory}),
								context(++{Object}, --{}),
								rules{createFinalTask}),
	RemoveInitial = ( 			delta(+-{InitialTasks}, -+{}),
								context(++{Object}, --{}),
								rules{DeleteInitial}),
	RemoveFinal = ( 			delta(+-{FinalTasks}, -+{}),
								context(++{Object}, --{}),
								rules{DeleteFinal}),								
	ObjectToSimpleFlow = ( 		delta(+-{Object}, -+{Simple}),
								context(++{}, --{}),
								rules{ObjectToSimple}),
	SimpleToObjectFlow = ( 		delta(+-{Simple}, -+{Object}),
								context(++{}, --{}),
								rules{SimpleToObject}),
	RemoveParallelSplit = (		delta(+-{ParallelSplit}, -+{}),
								context(++{Object}, --{}),
								rules{CreateParallelSplitShadow,ConnectInputsShadow, ConnectOutputsShadow}),								
	RemoveSynchronization = (	delta(+-{Synchronization}, -+{}),
								context(++{Object}, --{}),
								rules{CreateSynchronizationShadow,ConnectInputsShadow, ConnectOutputsShadow}),
	RemoveSimpleMerge = (		delta(+-{SimpleMerge}, -+{}),
								context(++{Object}, --{}),
								rules{CreateSimpleMergeShadow,ConnectInputsShadow, ConnectOutputsShadow}),
	RemoveMultiChoice = (	delta(+-{MultiChoice}, -+{}),
								context(++{Object}, --{}),
								rules{CreateMultiChoiceShadow,ConnectInputsShadow, ConnectOutputsShadow}),
	RemoveExclusiveChoice = (	delta(+-{ExclusiveChoice}, -+{}),
								context(++{Object}, --{}),
								rules{CreateExclusiveChoiceShadow,ConnectInputsShadow, ConnectOutputsShadow}),
	RemoveHierarchyBasic = (	delta(+-{Hierarchical}, -+{}),
								context(++{}, --{}),
								rules{RemoveEdgeFromHierarchical, RemoveNodeFromHierarchical, RemoveHierarchical}),
	RemoveHierarchyInitial = (	delta(+-{Hierarchical}, -+{}),
								context(++{InitialTasks}, --{}),
								rules{ConnectToInitial}),
	RemoveHierarchyFinal = (	delta(+-{Hierarchical}, -+{}),
								context(++{FinalTasks}, --{}),
								rules{ConnectToFinal})
																
}